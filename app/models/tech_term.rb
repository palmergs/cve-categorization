class TechTerm < ApplicationRecord
  include Concerns::HasIds

  belongs_to :technology
  has_many :term_vulnerabilities, dependent: :destroy

  validates :technology_id, presence: true
  validates :indicator, presence: true, numericality: {
    only_integer: true ,
    greater_than: -4,
    less_than: 4 }
  validates :term, presence: true, uniqueness: {
    scope: :technology_id }

  scope :by_technology, ->(id) {
    if id
      arr = Array.wrap(id).compact.map(&:to_i)
      where(technology_id: arr)
    end
  }

  scope :by_query, ->(q) {
    if q
      str = normalize_query(q)
      if str.present?
        where('tech_terms.term like ?', "%#{ str }%")
      else
        where('7=6')
      end
    end
  }

  scope :by_indicator, ->(i) {
    if i
      where(indicator: i.to_i)
    end
  }

  after_create do |obj|
    vulns = Vulnerability.by_query(obj.term)
    vulns.each do |vuln|
      tv = TermVulnerability.create(tech_term: obj, vulnerability: vuln)
    end
  end
end
