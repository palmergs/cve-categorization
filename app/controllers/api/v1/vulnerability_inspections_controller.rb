class Api::V1::VulnerabilityInspectionsController < ApplicationController
  include Concerns::HasPagination

  def index
    @vulnerability_inspections = VulnerabilityInspection.by_ids(params[:ids]).
        by_vulnerability(params[:vulnerability_id]).
        page(current_page).
        per(current_size).
        order(current_sort)
    render json: @vulnerability_inspections,
        meta: meta(@vulnerability_inspections)
  end

  def show
    @vulnerability_inspection = VulnerabilityInspection.find(params[:id])
    render json: @vulnerability_inspection
  end

  def create
    @vulnerability_inspection = VulnerabilityInspection.new(create_params)
    if @vulnerability_inspection.save
      render json: @vulnerability_inspection
    else
      render json: @vulnerability_inspection.errors.full_messages,
          status: :unprocessable_entity
    end
  end

  def update
    @vulnerability_inspection = VulnerabilityInspection.find(params[:id])
    if @vulnerability_inspection.update_attributes(update_params)
      render json: @vulnerability_inspection
    else
      render json: @vulnerability_inspection.errors.full_messages,
          status: :unprocessable_entity
    end
  end

  def destroy
    @vulnerability_inspection = VulnerabilityInspection.find(params[:id])
    if @vulnerability_inspection.destroy
      head :ok
    else
      render json: @vulnerability_inspection.errors.full_messages,
          status: :unprocessable_entity
    end
  end

  private

    def create_params
      params.require(:vulnerability_inspection).permit(:technology_id,
          :vulnerability_id,
          :indicator)
    end

    def update_params
      params.require(:vulnerability_inspection).permit(:indicator)
    end
end
