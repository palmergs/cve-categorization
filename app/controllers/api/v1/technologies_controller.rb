class Api::V1::TechnologiesController < ApplicationController
  include Concerns::HasPagination

  def index
    @technologies = Technology.by_ids(ids).
        by_query(filter[:q]).
        page(current_page).
        per(current_size).
        order(current_sort)
    render json: @technologies, meta: meta(@technologies)
  end

  def show
    @technology = Technology.find(params[:id])
    render json: @technology
  end

  def create
    @technology = Technology.new(create_technology_params)
    if @technology.save
      render json: @technology
    else
      render json: @technology.errors.full_messages, status: :unprocessable_entity
    end
  end

  def update
    @technology = Technology.find(params[:id])
    if @technology.update_attributes(update_technology_params)
      render json: @technology
    else
      render json: @technology.errors.full_messages, status: :unprocessable_entity
    end
  end

  def destroy
    @technology = Technology.find(params[:id])
    if @technology.destroy
      head :ok
    else
      render json: @technology.errors.full_messages, status: :unprocessable_entity
    end
  end

  def available_cols
    hash = super
    hash[:name] = [ :asc, :desc ]
    hash
  end

  private

    def create_technology_params
      ActiveModelSerializers::Deserialization.jsonapi_parse(params, only: [ :name ])
      # params.require(:data).require(:attributes).permit(:name)
    end

    def update_technology_params
      ActiveModelSerializers::Deserialization.jsonapi_parse(params, only: [ :name ])
      # params.require(:data).require(:attributes).permit(:name)
    end

end
