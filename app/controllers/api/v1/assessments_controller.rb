class Api::V1::AssessmentsController < ApplicationController
  include Concerns::HasPagination

  def index
    tech = Technology.find(params[:technology_id])
    vulnerabilities = Vulnerability.by_ids(params[:ids]).
        by_technology(tech.id, params[:indicator]).
        by_query(params[:q]).
        by_year(params[:year]).
        page(current_page).
        per(current_size).
        order(current_sort)
    @assessments = vulnerabilities.map {|vuln| assess(tech, vuln) }
    render json: @assessments, meta: meta(vulnerabilities)
  end

  def show
    tech = Technology.find(params[:technology_id])
    vuln = Vulnerability.find(params[:id])
    @assessment = assessment(tech, vuln)
    render json: @assessment
  end

  def update
    tech = Technology.find(params[:technology_id])
    vuln = Vulnerability.find(params[:id])
    @assessment = assessment(tech, vuln)
    @assessment.save if @assessment.new_record? || @assessment.changed?

    # NOTE: this assumes no users; will need to be changed when users is
    # added as a model
    @assessment.user_assessments.destroy_all
    @assessment.user_assessments.create({ value: params[:value] })
    render json: @assessment
  end

  private

    def assessment tech, vuln
      Assessment.find_or_build_by({ technology_id: tech.id, vulnerability_id: vuln.id })
    end

end
