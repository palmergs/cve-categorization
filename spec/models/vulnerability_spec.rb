require 'rails_helper'

RSpec.describe Vulnerability, type: :model do
  it 'can be instantiated' do
    expect(Vulnerability.new).to_not be_nil
  end

  it 'can be persisted' do
    expect(create(:vulnerability)).to be_persisted
    expect(create(:vulnerability)).to be_persisted
  end

  describe 'scopes' do
    it 'can query by associated terms' do
      expect(Vulnerability.has_terms.count).to eq(0)
      tv = create(:term_vulnerability)
      expect(tv.vulnerability).to be_terms
      expect(Vulnerability.has_terms.count).to eq(1)
    end

    it 'can query by inspections' do
      expect(Vulnerability.has_inspections.count).to eq(0)
      vi = create(:vulnerability_inspection)
      expect(vi.vulnerability).to be_inspected
      expect(Vulnerability.has_inspections.count).to eq(1)
    end

    it 'can be queried by technology through term and inspection models' do
      tech = create(:technology)
      expect(Vulnerability.by_technology(tech.id).count).to eq(0)

      term = create(:tech_term, technology: tech)
      tv = create(:term_vulnerability, tech_term: term)
      q = Vulnerability.by_technology(tech.id)
      expect(q.count).to eq(1)

      vi = create(:vulnerability_inspection, technology: tech)
      expect(Vulnerability.by_technology(tech.id).count).to eq(2)
    end
  end
end
