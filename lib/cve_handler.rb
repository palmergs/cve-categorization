class CveHandler

  def initialize 
    @depth = 0
    @current_vulnerability = nil
    @current_url = nil
    @current_element = nil
    @current_attrs = nil
  end

  def on_element namespace, name, attrs = {}
    if name == 'Vulnerability'
      @current_vulnerability = Vulnerability.new
    elsif name == 'Reference'
      @current_url = Reference.new
    else
      @current_element = name
      @current_attrs = attrs
    end
  end

  def on_text text
    tmp = one_line(text)
    case @current_element
    when 'URL'
      @current_url.url = tmp if @current_url
    when 'Description'
      @current_url.description = tmp if @current_url
    when 'Note'
      if @current_attrs['Type'] == 'Description'
        @current_vulnerability.description = tmp
      elsif @current_attrs['Title'] == 'Published'
        @current_vulnerability.publish_date = tmp
      end
    when 'Title'
      @current_vulnerability.title = tmp
    when 'CVE'
      @current_vulnerability.cve = tmp
    end
  end

  def after_element namespace, name
    if name == 'Vulnerability'
      puts @current_vulnerability.inspect
      @current_vulnerability.save!
      @current_vulnerability = nil
    elsif name == 'Reference'
      if @current_url.url.present?
        puts @current_url.inspect 
        @current_vulnerability.references << @current_url
      end
      @current_url = nil
    end
    @current_element = nil
    @current_attrs = nil
  rescue StandardError => e
    puts "count not save vulnerability! #{ e.message }"
  end

  def one_line text
    encoded = text.encode('UTF-8', invalid: :replace, undef: :replace, replace: '?')
    encoded.gsub(/[\n\r\t\s]+/m, ' ')
  end
end
