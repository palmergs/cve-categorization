import Ember from 'ember';
import AssessmentColumn from '../../models/assessment-column';

export default Ember.Controller.extend({
  store: Ember.inject.service(),

  userRejected: AssessmentColumn.create({ data: Ember.A() }),
  userSelected: AssessmentColumn.create({ data: Ember.A() }),
  uncategorized: AssessmentColumn.create({ data: Ember.A() }),
  termUnlikely: AssessmentColumn.create({ data: Ember.A() }),
  termLikely: AssessmentColumn.create({ data: Ember.A() }),

  loadColumns: Ember.on('init', Ember.observer('model', function() {
    if(this.get('model.id')) {
      this.appendForCategory(-2);
      this.appendForCategory(-1);
      this.appendForCategory( 0);
      this.appendForCategory( 1);
      this.appendForCategory( 2);
    }
  })),

  queryForCategory(category) {
    const column = this.columnForCategory(category);
    const page = column.get('meta.page') ? column.get('meta.page') + 1 : null
    return this.get('store').query('assessment', {
      technology_id: this.get('model.id'),
      p: page,
      filter: { assess: category }
    });
  },

  columnForCategory(category) {
    console.log(`column for category ${ category }`);
    switch(category) {
      case -2: return this.get('userRejected');
      case -1: return this.get('termUnlikely');
      case  0: return this.get('uncategorized');
      case  1: return this.get('termLikely');
      case  2: return this.get('userSelected');
    }
  },

  appendForCategory(category) {
    this.queryForCategory(category).then((results) => {
      const column = this.columnForCategory(category);

      console.log(`appending for category ${ category } << ${ results.get('length') }`);
      column.get('data').addObjects(results);
      column.set('meta', results.meta.pagination);
    });
  },

  actions: {
    onAssessmentChanged(assessment) {
      const category = assessment.get('assessment');
      const column = this.columnForCategory(category);
      column.incrementProperty('meta.total');
      column.get('data').pushObject(assessment);
    },

    onLoadMore(category) {
      this.appendForCategory(category);
    }
  }
});
