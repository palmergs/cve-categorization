import Ember from 'ember';

export default Ember.Controller.extend({

  userRejectedMeta: { total: 0 },
  userRejected: Ember.A(),

  userSelectedMeta: { total: 0 },
  userSelected: Ember.A(),

  uncategorizedMeta: { total: 0 },
  uncategorized: Ember.A(),

  termUnlikelyMeta: { total: 0 },
  termUnlikely: Ember.A(),

  termLikelyMeta: { total: 0 },
  termLikely: Ember.A(),

  actions: {
    onAssessmentChanged(assessment) {
      const column = assessment.get('assessment');
      switch(column) {
        case -2:
          this.incrementProperty('userRejectedMeta.total');
          this.get('userRejected').pushObject(assessment);
          break;
        case -1:
          this.incrementProperty('termUnlikelyMeta.total');
          this.get('termUnlikely').pushObject(assessment);
          break;
        case 0:
          this.incrementProperty('uncategorizedMeta.total');
          this.get('uncategorized').pushObject(assessment);
          break;
        case 1:
          this.incrementProperty('termLikelyMeta.total');
          this.get('termLikely').pushObject(assessment);
          break;
        case 2:
          this.incrementProperty('userSelectedMeta.total');
          this.get('userSelected').pushObject(assessment);
          break;
      }
    },

    onLoadMore(technology, assess) {
      const id = technology.get('id');
      this.get('target').queryWithAssess(id, assess).then((results) => {
        switch(assess) {
          case -2:
            this.get('userRejected').pushObjects(results);
            break;
          case -1:
            this.get('termUnlikely').pushObjects(results);
            break;
          case 0:
            this.get('uncategorized').pushObjects(results);
            break;
          case 1:
            this.get('termLikely').pushObjects(results);
            break;
          case 2:
            this.get('userSelected').pushObjects(results);
            break;
        }
      });
    }
  }
});
